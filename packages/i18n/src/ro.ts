import type { Language } from './types';

// prettier-ignore
const language: Language = {
  code:               'ro',
  schema:             (issue) => `Tip invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
  specific: {
    base64:           (issue) => `Base64 invalid: S-a introdus ${issue.received}`,
    bic:              (issue) => `BIC invalid: S-a introdus ${issue.received}`,
    bytes:            (issue) => `Bytes invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    check:            (issue) => `Intrare invalidă: S-a introdus ${issue.received}`,
    checkAsync:       (issue) => `Intrare invalidă: S-a introdus ${issue.received}`,
    checkItems:       (issue) => `Element invalid: S-a introdus ${issue.received}`,
    checkItemsAsync:  (issue) => `Element invalid: S-a introdus ${issue.received}`,
    creditCard:       (issue) => `Card de credit invalid: S-a introdus ${issue.received}`,
    cuid2:            (issue) => `Cuid2 invalid: S-a introdus ${issue.received}`,
    decimal:          (issue) => `Zecimal invalid: S-a introdus ${issue.received}`,
    digits:           (issue) => `Cifre invalide: S-a introdus ${issue.received}`,
    email:            (issue) => `Email invalid: S-a introdus ${issue.received}`,
    emoji:            (issue) => `Emoji invalid: S-a introdus ${issue.received}`,
    empty:            (issue) => `Lungime invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    endsWith:         (issue) => `Sfârșit invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    everyItem:        (issue) => `Element invalid: S-a introdus ${issue.received}`,
    excludes:         (issue) => `Conținut invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    finite:           (issue) => `Finit invalid: S-a introdus ${issue.received}`,
    graphemes:        (issue) => `Grafeme invalide: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    hash:             (issue) => `Hash invalid: S-a introdus ${issue.received}`,
    hexColor:         (issue) => `Culoare hex invalidă: S-a introdus ${issue.received}`,
    hexadecimal:      (issue) => `Hexadecimal invalid: S-a introdus ${issue.received}`,
    imei:             (issue) => `IMEI invalid: S-a introdus ${issue.received}`,
    includes:         (issue) => `Conținut invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    integer:          (issue) => `Număr întreg invalid: S-a introdus ${issue.received}`,
    ip:               (issue) => `IP invalid: S-a introdus ${issue.received}`,
    ipv4:             (issue) => `IPv4 invalid: S-a introdus ${issue.received}`,
    ipv6:             (issue) => `IPv6 invalid: S-a introdus ${issue.received}`,
    isoDate:          (issue) => `Dată invalidă: S-a introdus ${issue.received}`,
    isoDateTime:      (issue) => `Dată-timp invalid: S-a introdus ${issue.received}`,
    isoTime:          (issue) => `Timp invalid: S-a introdus ${issue.received}`,
    isoTimeSecond:    (issue) => `Secundă-timp invalid: S-a introdus ${issue.received}`,
    isoTimestamp:     (issue) => `Timestamp invalid: S-a introdus ${issue.received}`,
    isoWeek:          (issue) => `Săptămână invalidă: S-a introdus ${issue.received}`,
    length:           (issue) => `Lungime invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    mac:              (issue) => `MAC invalid: S-a introdus ${issue.received}`,
    mac48:            (issue) => `48-bit MAC invalid: S-a introdus ${issue.received}`,
    mac64:            (issue) => `64-bit MAC invalid: S-a introdus ${issue.received}`,
    maxBytes:         (issue) => `Număr de bytes invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    maxGraphemes:     (issue) => `Număr de grafeme invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    maxLength:        (issue) => `Lungime invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    maxSize:          (issue) => `Dimensiune invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    maxValue:         (issue) => `Valoare invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    maxWords:         (issue) => `Număr maxim de cuvinte invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    mimeType:         (issue) => `Tip MIME invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    minBytes:         (issue) => `Număr minim de bytes invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    minGraphemes:     (issue) => `Număr minim de grafeme invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    minLength:        (issue) => `Lungime minimă invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    minSize:          (issue) => `Dimensiune minimă invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    minValue:         (issue) => `Valoare minimă invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    minWords:         (issue) => `Număr minim de cuvinte invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    multipleOf:       (issue) => `Multiplu invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    nanoid:           (issue) => `Nano ID invalid: S-a introdus ${issue.received}`,
    nonEmpty:         (issue) => `Lungime invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    notBytes:         (issue) => `Bytes invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    notGraphemes:     (issue) => `Grafeme invalide: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    notLength:        (issue) => `Lungime invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    notSize:          (issue) => `Dimensiune invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    notValue:         (issue) => `Valoare invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    notWords:         (issue) => `Cuvinte invalide: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    octal:            (issue) => `Octal invalid: S-a introdus ${issue.received}`,
    partialCheck:     (issue) => `Intrare invalidă: S-a introdus ${issue.received}`,
    regex:            (issue) => `Format invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    safeInteger:      (issue) => `Întreg sigur invalid: S-a introdus ${issue.received}`,
    size:             (issue) => `Dimensiune invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    someItem:         (issue) => `Element invalid: S-a introdus ${issue.received}`,
    startsWith:       (issue) => `Început invalid: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    ulid:             (issue) => `ULID invalid: S-a introdus ${issue.received}`,
    url:              (issue) => `URL invalid: S-a introdus ${issue.received}`,
    uuid:             (issue) => `UUID invalid: S-a introdus ${issue.received}`,
    value:            (issue) => `Valoare invalidă: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
    words:            (issue) => `Cuvinte invalide: Specificat era ${issue.expected} dar s-a introdus ${issue.received}`,
  },
};

export default language;
